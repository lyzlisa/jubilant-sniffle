name: docker-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Run the tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
      - name: Run tests
        run: python -m pytest

  run-linters:
      name: Run linters
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v2
        - name: Hadolint linting for Dockerfile
          uses: brpaz/hadolint-action@master
        - name: Set up Python
          uses: actions/setup-python@v1
          with:
            python-version: 3.9
        - name: Install Python dependencies
          run: pip install black flake8
        - name: Run python linters
          uses: wearerequired/lint-action@v1
          with:
            black: true
            flake8: true

  build:
    runs-on: ubuntu-latest
    needs: [test, run-linters]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd6, linux/arm64
          push: true
          tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/python-helloworld:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Logout of Dockerhub
        if: always()
        run: docker logout ${{ secrets.DOCKERHUB_USERNAME }}
